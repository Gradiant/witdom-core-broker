/**
 * WITDOM Broker API
 * API to use services from the Broker
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package eu.witdom.core.broker.client.api;

import eu.witdom.core.broker.client.ApiException;
import eu.witdom.core.broker.client.model.Error;
import eu.witdom.core.broker.client.model.Result;
import org.junit.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CallbackApi
 */
public class CallbackApiTest {

    private final CallbackApi api = new CallbackApi();

    
    /**
     * Update a request
     *
     * An error occurred during the execution of a previous request 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void callbackErrorPOSTTest() throws ApiException {
        Result service = null;
        String requestId = null;
        // Result response = api.callbackErrorPOST(service, requestId);

        // TODO: test validations
    }
    
    /**
     * Update a request
     *
     * Post the result of a previous request 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void callbackSuccessPOSTTest() throws ApiException {
        Result service = null;
        String requestId = null;
        // Result response = api.callbackSuccessPOST(service, requestId);

        // TODO: test validations
    }
    
}
